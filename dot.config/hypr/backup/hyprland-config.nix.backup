
{ config, lib, pkgs, ... }:

{
  #   ### Create a systemd service to copy the configuration file
  systemd.user.services.copy-hyprland-config = {
    description = "Create Hyprland configuration";
    wantedBy = [ "default.target" ];
    serviceConfig = {
    ExecStart = ''
        /bin/sh -c '
      cat <<EOF > /home/dwilliams/.config/hypr/hyprland.conf
            # DDUBs Hyprland configuration #
            # Revision 0.1 #
            # Date: Feb 11,2025 #
            # Need add more ENV variables

            #monitor=Virtual-1,2560x1440@60,auto,1
            monitor=Virtual-1,1920x1080@60,auto,1

            # Set programs that you use
            $$terminal = ghostty
            $$fileManager = thunar
            $$menu = rofi -show drun
            #$$menu = wofi --show drun

            #################
            ### AUTOSTART ###
            #################


            exec-once = nm-applet &
            exec-once = pkill waybar
            exec-once = sleep 0.3
            exec-once = waybar -c $$HOME/.config/waybar/config -s $$HOME/.config/waybar/style.css & 
            exec-once = swww-daemon & 
            exec-once = pypr & 

            #############################
            ### ENVIRONMENT VARIABLES ###
            #############################

            env = XCURSOR_SIZE,24
            env = HYPRCURSOR_SIZE,24
            env = NIXOS_OZONE_WL = "1"


            #####################
            ### LOOK AND FEEL ###
            #####################

            general {
                gaps_in = 5
                gaps_out = 20
                border_size = 2
                col.active_border = rgba(33ccffee) rgba(00ff99ee) 45deg
                col.inactive_border = rgba(595959aa)
                resize_on_border = false
                allow_tearing = false
                layout = dwindle
            }

            decoration {
                rounding = 0
                active_opacity = 1.0
                inactive_opacity = 0.75

            shadow {
             enabled = true
                range = 4
                render_power = 3
                color = rgba(1a1a1aee)
            }

            blur {
                enabled = true
                size = 3
             passes = 1

                vibrancy = 0.1696
            }
        }

            animations {
                enabled = yes
                bezier = easeOutQuint,0.23,1,0.32,1
                bezier = easeInOutCubic,0.65,0.05,0.36,1
                bezier = linear,0,0,1,1
                bezier = almostLinear,0.5,0.5,0.75,1.0
                bezier = quick,0.15,0,0.1,1
                animation = global, 1, 10, default
                animation = border, 1, 5.39, easeOutQuint
                animation = windows, 1, 4.79, easeOutQuint
                animation = windowsIn, 1, 4.1, easeOutQuint, popin 87%
                animation = windowsOut, 1, 1.49, linear, popin 87%
                animation = fadeIn, 1, 1.73, almostLinear
                animation = fadeOut, 1, 1.46, almostLinear
                animation = fade, 1, 3.03, quick
                animation = layers, 1, 3.81, easeOutQuint
                animation = layersIn, 1, 4, easeOutQuint, fade
                animation = layersOut, 1, 1.5, linear, fade
                animation = fadeLayersIn, 1, 1.79, almostLinear
                animation = fadeLayersOut, 1, 1.39, almostLinear
                animation = workspaces, 1, 1.94, almostLinear, fade
                animation = workspacesIn, 1, 1.21, almostLinear, fade
                animation = workspacesOut, 1, 1.94, almostLinear, fade
            }

                # "Smart gaps" / "No gaps when only"
                # uncomment all if you wish to use that.
                # workspace = w[tv1], gapsout:0, gapsin:0
                # workspace = f[1], gapsout:0, gapsin:0
                # windowrulev2 = bordersize 0, floating:0, onworkspace:w[tv1]
                # windowrulev2 = rounding 0, floating:0, onworkspace:w[tv1]
                # windowrulev2 = bordersize 0, floating:0, onworkspace:f[1]
                # windowrulev2 = rounding 0, floating:0, onworkspace:f[1]

                dwindle {
                    pseudotile = true # Master switch for pseudotiling. Enabling is bound to mainMod + P in the keybinds section below
                    preserve_split = true # You probably want this
                }

                master {
                    new_status = master
                }

                misc {
                    force_default_wallpaper = -1 # Set to 0 or 1 to disable the anime mascot 
                    disable_hyprland_logo = false # disables the random hyprland background. 
                }


                #############
                ### INPUT ###
                #############

                input {
                    kb_layout = us
                    kb_variant =
                    kb_model =
                    kb_options =
                    kb_rules =

                follow_mouse = 1
                sensitivity = 0 # -1.0 - 1.0, 0 means no modification.
                touchpad {
                    natural_scroll = false
                }
            }

          gestures {
              workspace_swipe = false
          }

          # Example per-device config
          device {
              name = epic-mouse-v1
              sensitivity = -0.5
          }


          ###################
          ### KEYBINDINGS ###
          ###################

          $mainMod = SUPER # Sets "Windows" key as main modifier

          bind = $$mainMod, RETURN, exec, $terminal
          bind = $$mainMod, A, exec, wezterm 
          bind = $$mainMod, Q, killactive,
          bind = $$mainMod SHIFT, Q, exit,
          bind = $$mainMod, T, exec, $fileManager
          bind = $$mainMod, V, togglefloating,
          bind = $$mainMod SHIFT, V, exec, hyprctl dispatch workspaceopt allfloat
          bind = $$mainMod, D, exec, $menu
          bind = $$mainMod, P, pseudo, # dwindle
          bind = $$mainMod, J, togglesplit, # dwindle
          bind = $$mainMod SHIFT, Q, exec, hyprctl activewindow | grep pid | tr -d 'pid:'| xargs kill
          bind = $$mainMod, F, fullscreen # Set active window to fullscreen
          bind = $$mainMod SHIFT, W, exec, waypaper # --random # Change the wallpaper
          bind = $$mainMod CTRL, W, exec, waypaper # Open wallpaper selector
          bind = $$mainMod, Z, exec, missioncenter # Open Mission Center

          # Move focus with mainMod + arrow keys
          bind = $$mainMod, left, movefocus, l
          bind = $$mainMod, right, movefocus, r
          bind = $$mainMod, up, movefocus, u
          bind = $$mainMod, down, movefocus, d
          bind = ALT,TAB, cyclenext
          bind = ALT,TAB,bringactivetotop

          # Swap windows
          bind = $$mainMod ALT, left, swapwindow, l
          bind = $$mainMod ALT, right, swapwindow, r
          bind = $$mainMod ALT, up, swapwindow, u
          bind = $$mainMod ALT, down, swapwindow, d

          bind = $$mainMod, mouse_down, workspace, e+1 # Open next workspace
          bind = $$mainMod, mouse_up, workspace, e-1 # Open previous workspace
          bind = $$mainMod CTRL, down, workspace, empty # Open the next empty workspace

          bind = $$mainMod, J, togglesplit # Toggle split
          bind = $$mainMod, left, movefocus, l # Move focus left
          bind = $$mainMod, right, movefocus, r # Move focus right

          # Passthrough SUPER KEY to Virtual Machine
           bind = $$mainMod, P, submap, passthru # Passthrough SUPER key to virtual machine
           submap = passthru
           bind = SUPER, Escape, submap, reset # Get SUPER key back from virtual machine
           submap = reset

          # pyprland
          bind = $$mainMod SHIFT, Return, exec, pypr toggle term # Dropdown terminal
          #bind = $$mainMod, code:49, exec, pypr toggle term # Dropdown terminal

          bind = $$mainMod, Tab, workspace, m+1 # Open next workspace
          bind = $$mainMod SHIFT, Tab, workspace, m-1 # Open previous workspace

          # Switch workspaces with mainMod + [0-9]
          bind = $$mainMod, 1, workspace, 1
          bind = $$mainMod, 2, workspace, 2
          bind = $$mainMod, 3, workspace, 3
          bind = $$mainMod, 4, workspace, 4
          bind = $$mainMod, 5, workspace, 5
          bind = $$mainMod, 6, workspace, 6
          bind = $$mainMod, 7, workspace, 7
          bind = $$mainMod, 8, workspace, 8
          bind = $$mainMod, 9, workspace, 9
          bind = $$mainMod, 0, workspace, 10

          # Move active window to a workspace with mainMod + SHIFT + [0-9]
          bind = $$mainMod SHIFT, 1, movetoworkspace, 1
          bind = $$mainMod SHIFT, 2, movetoworkspace, 2
          bind = $$mainMod SHIFT, 3, movetoworkspace, 3
          bind = $$mainMod SHIFT, 4, movetoworkspace, 4
          bind = $$mainMod SHIFT, 5, movetoworkspace, 5
          bind = $$mainMod SHIFT, 6, movetoworkspace, 6
          bind = $$mainMod SHIFT, 7, movetoworkspace, 7
          bind = $$mainMod SHIFT, 8, movetoworkspace, 8
          bind = $$mainMod SHIFT, 9, movetoworkspace, 9
          bind = $$mainMod SHIFT, 0, movetoworkspace, 10

          # Example special workspace (scratchpad)
          bind = $$mainMod, space, togglespecialworkspace, magic
          bind = $$mainMod SHIFT, space, movetoworkspace, special:magic

          # Scroll through existing workspaces with mainMod + scroll
          bind = $$mainMod, mouse_down, workspace, e+1
          bind = $$mainMod, mouse_up, workspace, e-1

          # Move/resize windows with mainMod + LMB/RMB and dragging
          bindm = $$mainMod, mouse:272, movewindow
          bindm = $$mainMod, mouse:273, resizewindow

          bind = $$mainMod SHIFT, right, resizeactive, 100 0 # Increase window width with keyboard
          bind = $$mainMod SHIFT, left, resizeactive, -100 0 # Reduce window width with keyboard
          bind = $$mainMod SHIFT, down, resizeactive, 0 100 # Increase window height with keyboard
          bind = $$mainMod SHIFT, up, resizeactive, 0 -100 # Reduce window height with keyboard
          bind = $$mainMod, G, togglegroup # Toggle window group
          bind = $$mainMod, K, swapsplit # Swapsplit

          # Laptop multimedia keys for volume and LCD brightness
          bindel = ,XF86AudioRaiseVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+
          bindel = ,XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
          bindel = ,XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
          bindel = ,XF86AudioMicMute, exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
          bindel = ,XF86MonBrightnessUp, exec, brightnessctl s 10%+
          bindel = ,XF86MonBrightnessDown, exec, brightnessctl s 10%-

          # Requires playerctl
          bindl = , XF86AudioNext, exec, playerctl next
          bindl = , XF86AudioPause, exec, playerctl play-pause
          bindl = , XF86AudioPlay, exec, playerctl play-pause
          bindl = , XF86AudioPrev, exec, playerctl previous

          ##############################
          ### WINDOWS AND WORKSPACES ###
          ##############################

          # Example windowrule v1
           windowrule = float, ^(kitty)$$

          # Example windowrule v2
           windowrulev2 = float,class:^(kitty)$$,title:^(kitty)$$

          # Ignore maximize requests from apps. You'll probably like this.
          windowrulev2 = suppressevent maximize, class:.*

          # Fix some dragging issues with XWayland
          windowrulev2 = nofocus,class:^$$,title:^$,xwayland:1,floating:1,fullscreen:0,pinned:0

EOF
                ';
              '';
        };
     };


}
